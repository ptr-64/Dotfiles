
global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment():
	return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
	return x != '0' and y != '0'
endglobal

context "math()"
snippet "((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*|\ )(\/\/)" "Fraction" riA
\\frac{`!p snip.rv = match.group(1)`${VISUAL}$1}{$2}$0
endsnippet

snippet "" "latex quotes"
\\blockcquote[${1:p-num}]{${2:citekey}}{${3:text}}
endsnippet

#context "math()"
#snippet eX "exists" iA
#\exists
#endsnippet
#
#context "math()"
#snippet fA "forall" iA
#\forall
#endsnippet

context "math()"
snippet '([A-Za-z])([A-Z]{3})' "xn" rwA
`!p snip.rv = match.group(1)`_{`!p snip.rv=match.group(2)[0].lower()`$1}
endsnippet

context "math()"
snippet '(?<!\\|[a-z])(alpha|beta|gamma|theta|zeta|tau|chi|psi|omega|sigma|nu|mu|epsilon|delta|rho|phi|zeta|iota|kappa|lambda|xi|eta|pi)' "greek" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet '(?<!\\|[a-z])(ln|infty|log|exp|because|therefore|forall|iff|ne|succ|succeq|plim|in|lim|sim|ge|le|exists|times|subset)' "ln" wrA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|arcsin|arccos|arctan|arccot|arcsc|star|perp|indp|equiv|max|min|cdot|contra|lor|land|neg)' "ln2" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet ntgrl "integral" wA
\int\limits_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}}$0
endsnippet

context "math()"
snippet ccc "(proper)subset" iA
\subset${1:eq}
endsnippet

context "math()"
snippet notin "not in " iA
\not\in
endsnippet

snippet mbb "mathbb"
\mathbb{$1}$0
endsnippet

context "math()"
snippet ** "to the power" iA
^{$1${VISUAL}}$0
endsnippet

context "math()"
snippet __ "subscript" iA
_{$1${VISUAL}}$0
endsnippet


context "math()"
snippet smm "summation"
\sum\limits_{$1}^{$2}
endsnippet


context "math()"
snippet prd "Product"
\ptod_{$1}^{$2}
endsnippet

context "math()"
snippet lmt "Limits"
\limits_{$1}
endsnippet

context "math()"
snippet bnm "binomials"
\binom{$1}{$2}
endsnippet

snippet mk "math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Also math" wA
\[
$1
.\]$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d+)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`$1}$0
endsnippet

context "math()"
snippet @>> "rightarrow" wA
\xrightarrow[$1]{$2}$0
endsnippet

context "math()"
snippet >> "Rightarrow" wA
\Rightarrow
endsnippet

context "math()"
snippet prtl "Partial" wA
\frac{\partial $1}{\partial $2}$0
endsnippet

context "math()"
priority 100
snippet "((\(|\||\[|\{)*(\d*)(\\)?([A-Za-z]+)*(\)|\]|\||\})*)(dlt)" "SubSupersCript" riA
`!p snip.rv=match.group(1)`_{$1}^{$2}$0
endsnippet

context "math()"
priority 100
snippet "((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*|\ )(hat)" "hat" riA
\hat{`!p snip.rv=match.group(1)`$1${VISUAL}}
endsnippet

context "math()"
priority 100
snippet "((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*|\ )(bar)" "bar, or overline" riA
\overline{`!p snip.rv=match.group(1)`$1${VISUAL}}$0
endsnippet

context "math()"
snippet "((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*|\ )(vct)" "vector" riA
\vec{`!p snip.rv=match.group(1)`$1${VISUAL}}
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix}
$1
\end{bmatrix}$0
endsnippet

context "math()"
snippet "((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*|\ )(sqrt)" "\sqrt{}" riA
\sqrt{`!p snip.rv=match.group(1)`$1${VISUAL}}$0
endsnippet

context "math()"
snippet ... "dots" iA
\dots$0
endsnippet


context "math()"
snippet "((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*|\ )(tlde)" "tilde" riA
\widetilde{`!p snip.rv=match.group(1)`$1${VISUAL}}$0
endsnippet

context "math()"
snippet "((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*|\ )(undl)" "underline" iA
\underline{`!p snip.rv = match.group(1)`$1${VISUAL}}$0
endsnippet

snippet svg "include inscape image" bA
\begin{figure}[ht]
    \centering
    \incfig{$1}
    \caption{$2}
    \label{fig:$3}
\end{figure}
$0
endsnippet

context "math()"
snippet "((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*|\ )(undb)" "underbrace" riA
\\underbrace{`!p snip.rv = match.group(1)`$1${VISUAL}}$0
endsnippet

snippet adjstbx
\begin{adjustbox}{width=${1:insert fraction}\textwidth}
$2${VISUAL}
\end{adjustbox}
endsnippet

context "math()"
snippet cases "cases environment" b
\begin{cases}
${1}${VISUAL}
\end{cases}
endsnippet

snippet dfn "Definition env" b
\begin{definition}[${1:Define Term}]
${2:Definition...}${VISUAL}
\end{definition}
endsnippet

snippet prmbl "preamble" b
\documentclass[$1]{$2}
${3: HINT: eg \input{path/to/input.tex}, or \addbibresource, or \usepackage[disable]{todonotes}}
\title{$4}
\author{$5}
\begin{document}
\maketitle

$0

\end{document}
endsnippet

snippet rszbox "resizebox"
\resizebox{${1:0.0-1.0}\textwidth}{!}{%
${2:your tabular}
}%
endsnippet

snippet tcite "textcite"
\textcite[$1]{$2}$0
endsnippet
